{% extends 'base_admin.html.twig' %}

{% block title %}Edit Lampadaire{% endblock %}

{% block stylesheet %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <style>
        #map {
            height: 400px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="container py-4">
        <h2 class="mb-4">Edit Streetlight</h2>

        <div id="map"></div>

        <div class="card shadow-sm mt-4">
            <div class="card-body">
                {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}
                    {{ form_widget(form) }}
                    <div class="mt-3">
                        <button class="btn btn-success">{{ button_label|default('Update') }}</button>
                        <a href="{{ path('app_lampadaire_index') }}" class="btn btn-secondary">Back to list</a>
                    </div>
                {{ form_end(form) }}
            </div>
        </div>

        <div class="mt-4">
            {{ include('lampadaire/_delete_form.html.twig') }}
        </div>
    </div>
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        const map = L.map('map').setView([36.8065, 10.1815], 13);

        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; OpenStreetMap contributors'
        }).addTo(map);

        let marker;

        // Si déjà une localisation enregistrée (ex: quand on édite)
        const localisationInput = document.getElementById('lampadaire_localisation');
        if (localisationInput && localisationInput.value) {
            fetch(`https://nominatim.openstreetmap.org/search?format=jsonv2&q=${localisationInput.value}`)
                .then(response => response.json())
                .then(data => {
                    if (data.length > 0) {
                        const lat = data[0].lat;
                        const lon = data[0].lon;
                        marker = L.marker([lat, lon]).addTo(map);
                        map.setView([lat, lon], 15);
                    }
                });
        }

        map.on('click', function(e) {
            const { lat, lng } = e.latlng;

            if (marker) map.removeLayer(marker);
            marker = L.marker([lat, lng]).addTo(map);

            fetch(`https://nominatim.openstreetmap.org/reverse?format=jsonv2&lat=${lat}&lon=${lng}`)
                .then(response => response.json())
                .then(data => {
                    const street = data.address.road || data.display_name || 'Inconnue';
                    if (localisationInput) {
                        localisationInput.value = street;
                    }
                })
                .catch(error => {
                    console.error('Erreur lors du géocodage :', error);
                });
        });
    </script>
{% endblock %}
